#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E    &kp R             &kp T                                  &kp Y            &kp U  &kp I      &kp O              &kp P
&kp A             &kp S         &kp D    &kp F             &kp G        &none          &none      &kp H            &kp J  &kp K      &kp L              &kp RIGHT_COMMAND
&mt LEFT_SHIFT Z  &kp X         &kp C    &kp V             &kp B        &none          &none      &kp N            &kp M  &kp COMMA  &mt RIGHT_ALT DOT  &mt RIGHT_SHIFT TAB
&kp LCTRL         &kp LEFT_ALT  &kt ESC  &kp LEFT_COMMAND  &lt 2 SPACE  &lt 3 TAB      &kp ENTER  &lt 1 BACKSPACE                                       &mt RCTRL DEL
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        NUM {
            bindings = <
&none             &kp GRAVE         &kp MINUS         &kp EQUAL         &kp SEMICOLON                         &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SLASH         &kp SINGLE_QUOTE  &kp BACKSLASH
&kp KP_NUMBER_1   &kp KP_NUMBER_2   &kp KP_NUMBER_3   &kp KP_NUMBER_4   &kp KP_NUMBER_5   &trans      &none   &kp KP_NUMBER_6   &kp KP_NUMBER_7    &kp KP_NUMBER_8   &kp KP_NUMBER_9   &kp KP_NUMBER_0
&kt LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(NUMBER_4)  &kp LS(NUMBER_5)  &none       &none   &kp LS(NUMBER_6)  &kp LS(N7)         &kp LS(NUMBER_8)  &kp LS(NUMBER_9)  &kp LS(NUMBER_0)
&trans            &trans            &trans            &trans            &trans            &trans      &trans  &trans                                                                   &trans
            >;
        };

        MOUSE {
            bindings = <
&none   &kp LS(GRAVE)  &kp LS(MINUS)  &kp LS(EQUAL)  &kp LS(SEMI)                      &kp LS(LEFT_BRACE)  &kp LS(RIGHT_BRACE)  &kp LS(SLASH)  &kp LS(SINGLE_QUOTE)  &kp LS(BSLH)
&kp F1  &kp F2         &none          &kp F4         &none         &trans      &none   &mkp MB4            &mkp MB1             &mkp MB2       &none                 &none
&none   &none          &none          &none          &none         &none       &none   &mkp MB5            &kp LC(UP_ARROW)     &mkp MB3       &none                 &kp LA(LC(LG(LS(PAGE_UP))))
&trans  &trans         &trans         &trans         &trans        &trans      &trans  &trans                                                                        &trans
            >;
        };

        ARROW {
            bindings = <
&none          &none          &kp LS(LG(NUMBER_3))      &kp LG(LS(NUMBER_4))      &kp LS(LG(N5))                      &none     &kp PAGE_UP     &kp UP_ARROW    &kp PAGE_DOWN    &none
&none          &kp LA(LG(S))  &kp LS(LC(LG(NUMBER_3)))  &kp LS(LC(LG(NUMBER_4)))  &none           &trans      &none   &kp HOME  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none
&kp LA(LG(Z))  &none          &none                     &kp LG(LA(V))             &none           &none       &none   &kp END   &none           &none           &none            &none
&trans         &trans         &trans                    &trans                    &trans          &trans      &trans  &trans                                                     &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        FUNCTION {
            bindings = <
&none    &none    &none   &none   &none                       &none   &none   &none   &none   &none
&kp F1   &kp F2   &kp F3  &kp F4  &kp F5  &trans      &none   &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&kp F11  &kp F12  &none   &none   &none   &none       &none   &none   &none   &none   &none   &none
&trans   &trans   &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        SYMBOL_PUNCTUATION {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };
    };
};
